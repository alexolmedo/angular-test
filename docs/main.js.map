{"version":3,"sources":["./src/app/github-rest.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/user-rest.service.ts","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {User} from \"./user\";\nimport {environment} from \"../environments/environment\";\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubRestService {\n\n  private model = \"/users\";\n\n  constructor(private readonly _httpClient: HttpClient) {\n  }\n\n  // Get userdata from Github\n  find(username: string): Observable<User> {\n    return this._httpClient\n      .get(environment.githubURL + this.model + '/' + username)\n      .pipe(map(r => r as User));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col text-center\">\n      <h1 class=\"display-2\">\n        Welcome to my website\n      </h1>\n      <p>\n        Here you will be able to search for a Github username and find all the data related to that user.\n      </p>\n      <a class=\"btn btn-primary mt-5\" href=\"/users\">Click here to start</a>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:3000',\n  githubURL: 'https://api.github.com'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'my-app';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\">Home</a>\n  <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Users</a>\n</nav>\n<div class=\"mt-lg-5 mb-lg-5\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HomeComponent } from './home/home.component';\nimport { UsersComponent } from './users/users.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    UsersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot({ extras: { lazyRender: true } }),\n    FormlyBootstrapModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {User} from \"./user\";\nimport {environment} from \"../environments/environment\";\nimport {map} from \"rxjs/operators\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRestService {\n\n  private model = \"/users\"\n\n  constructor(private readonly _httpClient: HttpClient) {\n  }\n\n  // Find all users to display in table\n  findAll(): Observable<User[]> {\n    return this._httpClient\n      .get(environment.apiURL + this.model)\n      .pipe(map(r => r as User[]));\n  }\n\n  // Delete a user\n  delete(id: number | string): Observable<number> {\n    return this._httpClient\n      .delete(environment.apiURL + this.model + `/${id}`)\n      .pipe(map(r => r as number));\n  }\n\n  // Add a new user\n  create(user: User) {\n    const url = environment.apiURL + this.model;\n    return this._httpClient\n      .post(environment.apiURL + this.model, user)\n      .pipe(map(r => r as User));\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {User} from \"../user\";\nimport {UserRestService} from \"../user-rest.service\";\nimport {FormlyFieldConfig} from \"@ngx-formly/core\";\nimport {FormGroup} from \"@angular/forms\";\nimport {GithubRestService} from \"../github-rest.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n  users: User[] = [];\n\n  constructor(private readonly _userRest: UserRestService,\n              private readonly _githubRest: GithubRestService) {\n  }\n\n  ngOnInit(): void {\n\n    // Fill table data\n    const usuarios$ = this._userRest.findAll();\n    usuarios$.subscribe((users) => {\n      this.users = users;\n    });\n  }\n\n  // Formly field for username search\n  form = new FormGroup({});\n  formModel = {username: ''};\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'username',\n      type: 'input',\n      templateOptions: {\n        label: 'Search Github username:',\n        placeholder: 'Enter a username'\n      }\n    }\n  ];\n\n  // Search username in Github\n  onSubmit() {\n    const username = this.formModel.username\n    const usuarios$ = this._githubRest.find(username);\n    usuarios$.subscribe((user) => {\n        if (this.users.findIndex((m) => m.id === user.id) < 0) {\n          this.createUser(user)\n        } else {\n          alert('The username was already added');\n        }\n      }, (error => {\n        alert('The username couldn\\'t be found');\n      })\n    )\n  }\n\n  // Delete username button\n  deleteUser(id: number | string) {\n    this._userRest.delete(id)\n      .subscribe(\n        (usuario) => {\n          this.users.splice(this.users.findIndex((m) => m.id === id), 1);\n          alert('User deleted!');\n        },\n        (error) => alert('User ' + id + ' couldn\\'t be deleted')\n      );\n  }\n\n  // Create user after getting github data\n  createUser(user: User) {\n    this._userRest.create(\n      user\n    ).subscribe(\n      (user: User) => {\n        alert(`User added successfully: ${user.login}`);\n        const url = [\n          '/',\n          'users'\n        ];\n        window.location.reload();\n      }, (error => {\n        console.error('Error: ', error);\n      })\n    );\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <formly-form [form]=\"form\" [fields]=\"fields\" [model]=\"formModel\"></formly-form>\n        <button type=\"Search\" class=\"btn btn-success\">Add</button>\n      </form>\n    </div>\n  </div>\n  <div class=\"row pt-5\">\n    <div class=\"col\">\n      <table class=\"table table-striped\">\n        <thead>\n        <tr>\n          <th scope=\"col\">ID</th>\n          <th scope=\"col\">Picture</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Repos</th>\n          <th scope=\"col\">Location</th>\n          <th scope=\"col\">Actions</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let user of users\">\n          <th scope=\"row\">{{ user.id }}</th>\n          <th>\n            <img class=\"avatar-img\" [src]=user.avatar_url alt=\"\">\n          </th>\n          <td>\n            {{ user.name }}\n          </td>\n          <td>{{ user.public_repos }}</td>\n          <td>{{ user.location }}</td>\n          <td>\n            <button (click)=\"deleteUser(user.id)\" class=\"btn btn-danger\">Delete</button>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from \"./home/home.component\";\nimport {UsersComponent} from \"./users/users.component\";\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: 'home'},\n  {path: 'home', component: HomeComponent },\n  {path: 'users', component: UsersComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}